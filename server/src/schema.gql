# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserListResponse {
  data: [User!]!
  total: Int!
  page: Int!
  limit: Int!
}

type ObjectPermission {
  name: String!
  value: [String!]!
}

type ZaloMeResponse {
  user: User!
  accessToken: String!
}

type UploadFileInfo {
  _id: ID!
  alt: String
  author: String
  caption: String
  copyright: String
  description: String
  field: String
  filename: String
  keywords: [String!]
  path: String
  size: Float
  table: String
  title: String
  type: String
}

type User {
  _id: ID!
  name: String!
  email: String!
  username: String
  phone: String
  zaloId: String
  password: String
  createdAt: DateTime!
  updatedAt: DateTime!
  isActive: Boolean!
  isZaloActive: Boolean!
  status: String
  type: String
  role: String
  avatar: UploadFileInfo
  address: String
  gender: String
  lastLoginAt: DateTime!
  permissions: ObjectPermission
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  users(query: UserFilterInput, sort: [SortInput!], pagination: PaginationInput): UserListResponse!
  user(id: String!): User!
  userBy(query: UserFilterInput): User!
  getProfile: String!
  miniAppLogin(code: String!): ZaloMeResponse!
  miniAppMe: User!
}

input UserFilterInput {
  name: StringFieldOperator
  email: StringFieldOperator
  age: IntFieldOperator
  isActive: BooleanFieldOperator
}

input StringFieldOperator {
  eq: String
  ne: String
  in: [String!]
  nin: [String!]
  regex: String
}

input IntFieldOperator {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float!]
  nin: [Float!]
}

input BooleanFieldOperator {
  eq: Boolean
  ne: Boolean
}

input SortInput {
  field: String!
  order: SortOrder!
}

enum SortOrder {
  ASC
  DESC
}

input PaginationInput {
  page: Int! = 1
  limit: Int! = 10
}

type Mutation {
  createUser(createUserInput: CreateUserInput!, file: Upload): User!
  updateUser(updateUserInput: UpdateUserInput!, file: Upload): User!
  deleteUser(id: ID!): User!
  uploadFile(file: Upload!, uploadFileInput: UploadFileInput!): UploadFileInfo!
  login(email: String!, password: String!): String!
  miniAppActiveZalo(data: ZaloActiveInput!): User!
}

input CreateUserInput {
  name: String!
  email: String!
  username: String
  phone: String
  zaloId: String
  password: String!
  status: String
  type: String
  role: String
  avatar: UploadFileInput
  address: String
  gender: String
}

input UploadFileInput {
  path: String
  alt: String
  type: String
  table: String!
  field: String!
  size: Int
  filename: String
  title: String
  description: String
  keywords: [String!]
  caption: String
  author: String
  copyright: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateUserInput {
  name: String
  email: String
  username: String
  phone: String
  zaloId: String
  password: String
  status: String
  type: String
  role: String
  avatar: UploadFileInput
  address: String
  gender: String
  _id: ID!
}

input ZaloActiveInput {
  avatar: String!
  id: String!
  name: String!
  token: String!
  userAccessToken: String!
}